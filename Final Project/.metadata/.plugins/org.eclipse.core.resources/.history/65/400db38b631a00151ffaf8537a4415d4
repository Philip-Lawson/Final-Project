package finalproject.poc.sendingclasses;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;

public class ServerThread implements Runnable {
	
	private Socket socket;
	private SimpleServer server;
	
	private ObjectOutputStream out;
	private ObjectInputStream in;
	
	public ServerThread(Socket socket, SimpleServer server){
		this.socket = socket;
		this.server = server;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		try {
			getStreams();
			processConnection();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			closeConnections();
		}

	}
	
	private void getStreams() throws IOException {
		out = new ObjectOutputStream(socket.getOutputStream());
		out.flush();
		
		in = new ObjectInputStream (socket.getInputStream());
	}
	
	private void processConnection(){
		
	}
	
	private void closeConnections() {
		try {
			if (out != null){
				out.close();
			}
			
			if (in != null) {
				in.close();
			}
			
			if (socket != null){
				socket.close();
			} 
		} catch (IOException IOEx){
				IOEx.printStackTrace();
		}		
	}
	
	private void sendClass() throws IOException{
		out.writeObject(Calculator.class);
	}

}
